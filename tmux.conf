# set vi or emacs style bindings in status bar 
set-option -g status-keys emacs

# window settings   
set-window-option -g window-status-current-bg blue
set-window-option -g alternate-screen on

# renumbers windows when one is closed 
set-option -g renumber-windows on

# start window numbering at 1 for easier switching
set -g base-index 1

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# use mouse # More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
setw -g mode-mouse on
setw -g mouse-resize-pane on
set -g mouse-select-window on
set -g mouse-select-pane on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# split pane opens with current path 
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
# Instructions:
# to enter copy mode:  
  # Ctrl b,Escape
# move cursor to the start or end of the desired text
# to activate highlighting: 
  # v
# move cursor to cover the requisite string
# to capture the string: 
  # y
# exit copy mode:  
  # q
# put/paste the text in the desired location: 
  # Ctrl-b, p
